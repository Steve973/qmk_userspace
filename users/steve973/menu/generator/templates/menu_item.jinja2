{# Helper macro for operation configurations #}
{% macro render_operation_configs(op, name) %}
{% if op.input %}
{# First generate any option arrays needed by inputs #}
{% for input in op.input %}
{% if input.type.name == "OPTIONS" %}
static const char* const {{ name }}_input{{ loop.index0 }}_options[] = {
    {% for option in input.options %}
    "{{ option }}",
    {% endfor %}
};
{% endif %}
{% endfor %}

{% macro render_display_content(content, name) %}
static const display_element_t {{ name }}_elements[] = {
    {% for element in content.elements %}
    {
        .type = DISPLAY_TYPE_{{ element.type.name }},
        .text = "{{ element.text }}",
        .is_selectable = {{ element.is_selectable|lower }}
    }{{ "," if not loop.last }}
    {% endfor %}
};

static const display_content_t {{ name }}_display = {
    .title = "{{ content.title }}",
    .elements = {{ name }}_elements,
    .element_count = {{ content.elements|length }}
};
{% endmacro %}

{# Generate all configurations first #}
{% if item.operation %}
    {{ render_operation_configs(item.operation, name) }}

    {# Generate display content for each operation phase #}
    {% set precondition_display = item.operation.get_display_content('precondition') %}
    {% if precondition_display %}
        {{ render_display_content(precondition_display, name ~ '_precondition') }}
    {% endif %}

    {% set input_display = item.operation.get_display_content('input') %}
    {% if input_display %}
        {{ render_display_content(input_display, name ~ '_input') }}
    {% endif %}

    {% set confirm_display = item.operation.get_display_content('confirm') %}
    {% if confirm_display %}
        {{ render_display_content(confirm_display, name ~ '_confirm') }}
    {% endif %}

    {% set action_display = item.operation.get_display_content('action') %}
    {% if action_display %}
        {{ render_display_content(action_display, name ~ '_action') }}
    {% endif %}

    {% set result_display = item.operation.get_display_content('result') %}
    {% if result_display %}
        {{ render_display_content(result_display, name ~ '_result') }}
    {% endif %}

    {% set postcondition_display = item.operation.get_display_content('postcondition') %}
    {% if postcondition_display %}
        {{ render_display_content(postcondition_display, name ~ '_postcondition') }}
    {% endif %}
{% endif %}

{# Generate menu display content #}
{% set menu_display = item.get_display_content() %}
{% if menu_display %}
    {{ render_display_content(menu_display, name) }}
{% endif %}

{# Then generate the input configs #}
static const struct input_config {{ name }}_inputs[] = {
    {% for input in op.input %}
    {
        .type = INPUT_TYPE_{{ input.type.name }},
        .prompt = "{{ input.prompt|replace('\n', '\\n') }}",
        .default_val = "{{ input.default }}",
        .wrap = {{ input.wrap|lower }},
        .live_preview = {{ input.live_preview|default(false)|lower }},
        .data = {
            {% if input.type.name == "RANGE" %}
            .range = {
                .min = {{ input.range.split("..")[0] }},
                .max = {{ input.range.split("..")[1].split(":")[0] }},
                .step = {{ input.range.split(":")[1] }}
            }
            {% elif input.type.name == "OPTIONS" %}
            .options = {
                .options = {{ name }}_input{{ loop.index0 }}_options,
                .option_count = {{ input.options|length }}
            }
            {% endif %}
        }
    }{{ "," if not loop.last }}
    {% endfor %}
};

static const struct input_array_config {{ name }}_input_array = {
    .inputs = {{ name }}_inputs,
    .input_count = {{ op.input|length }}
};
{% endif %}

{% if op.confirm %}
static const struct confirm_config {{ name }}_confirm = {
    .message = "{{ op.confirm.message|replace('\n', '\\n') }}",
    .timeout_sec = {{ op.confirm.timeout_sec|default(0) }},
    .true_text = "{{ op.confirm.true_text or 'Yes' }}",
    .false_text = "{{ op.confirm.false_text or 'No' }}"
};
{% endif %}

{% if op.result %}
static const struct result_config {{ name }}_result = {
    .message = "{{ op.result.message|replace('\n', '\\n') }}",
    .mode = RESULT_MODE_{{ op.result.mode.name }},
    .timeout_sec = {{ op.result.timeout_sec|default(0) }},
    .ok_text = "{{ op.result.ok_text or '' }}"
};
{% endif %}
{% endmacro %}

{# Generate all operation configurations first #}
{% if item.operation %}
{{ render_operation_configs(item.operation, name) }}
{% endif %}

{# Generate condition rules if present #}
{% if item.conditions %}
static const struct condition_rule_config {{ name }}_rules[] = {
    {
        .type = RULE_FEATURE_ENABLED,
        .rule_data = {
            .feature = "{{ item.conditions.feature_enabled }}"
        }
    }
};
{% endif %}

{# Generate children arrays #}
{% if item.children %}
static const menu_item_t* const {{ name }}_children[] = {
    {%- for child in child_names -%}
    &{{ child }}{{ ", " if not loop.last else "" }}
    {%- endfor -%}
};
{% endif %}

{# Finally, generate the menu item itself #}
static const menu_item_t {{ name }} = {
    .label = "{{ item.label|replace('\n', '\\n') }}",
    .label_short = "{{ item.label_short or ''|replace('\n', '\\n') }}",
    .icon = "{{ item.icon or '' }}",
    .shortcut = "{{ item.shortcut or '' }}",
    .type = MENU_TYPE_{{ item.type.name }},
    .help_text = "{{ (item.help_text or '')|replace('\n', '\\n') }}",
    .operation = {
        .action = {% if item.operation %}"{{ item.operation.action }}"{% else %}NULL{% endif %},
        .inputs = {% if item.operation and item.operation.input %}&{{ name }}_input_array{% else %}NULL{% endif %},
        .confirm = {% if item.operation and item.operation.confirm %}&{{ name }}_confirm{% else %}NULL{% endif %},
        .result = {% if item.operation and item.operation.result %}&{{ name }}_result{% else %}NULL{% endif %}
        .precondition_display = {% if precondition_display %}&{{ name }}_precondition_display{% else %}NULL{% endif %},
        .input_display = {% if input_display %}&{{ name }}_input_display{% else %}NULL{% endif %},
        .confirm_display = {% if confirm_display %}&{{ name }}_confirm_display{% else %}NULL{% endif %},
        .action_display = {% if action_display %}&{{ name }}_action_display{% else %}NULL{% endif %},
        .result_display = {% if result_display %}&{{ name }}_result_display{% else %}NULL{% endif %},
        .postcondition_display = {% if postcondition_display %}&{{ name }}_postcondition_display{% else %}NULL{% endif %}
    },
    .conditions = {% if item.conditions %}{
        .match = CONDITION_MATCH_ALL,
        .rules = {{ name }}_rules,
        .rule_count = 1
    }{% else %}{0}{% endif %},
    .children = {% if item.children %}{{ name }}_children{% else %}NULL{% endif %},
    .child_count = {{ child_names|length if item.children else 0 }},
    .display = {% if menu_display %}&{{ name }}_display{% else %}NULL{% endif %}
};
